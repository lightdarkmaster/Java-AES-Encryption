
import javax.crypto.Cipher;
//import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import java.nio.charset.StandardCharsets;
import java.util.Base64;

public class TryingEncryption extends javax.swing.JFrame {

	String plainText;
	String encryptionKeys;
	
	public TryingEncryption() {
		initComponents();
	}
	
	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
        private void initComponents() {

                jPanel1 = new javax.swing.JPanel();
                label1 = new java.awt.Label();
                label2 = new java.awt.Label();
                keys = new java.awt.TextField();
                originaText = new java.awt.TextField();
                encryptButton = new javax.swing.JButton();
                eOutput = new java.awt.TextField();
                label3 = new java.awt.Label();
                decryptButton = new javax.swing.JButton();
                clear1 = new javax.swing.JButton();
                dOutput = new java.awt.TextField();
                label4 = new java.awt.Label();
                label5 = new java.awt.Label();
                label6 = new java.awt.Label();
                label7 = new java.awt.Label();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                setResizable(false);

                jPanel1.setBackground(new java.awt.Color(204, 255, 255));

                label1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                label1.setText("Enter Text");

                label2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                label2.setText("16 Character Keys");

                keys.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                keys.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                keysActionPerformed(evt);
                        }
                });

                originaText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                originaText.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                originaTextActionPerformed(evt);
                        }
                });

                encryptButton.setBackground(new java.awt.Color(153, 255, 102));
                encryptButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                encryptButton.setForeground(new java.awt.Color(0, 0, 0));
                encryptButton.setText("Encrypt");
                encryptButton.setBorder(javax.swing.BorderFactory.createCompoundBorder());
                encryptButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                encryptButtonActionPerformed(evt);
                        }
                });

                eOutput.setEditable(false);
                eOutput.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                eOutput.setForeground(new java.awt.Color(0, 0, 0));
                eOutput.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                eOutputActionPerformed(evt);
                        }
                });

                label3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                label3.setText("Encrypted Text");

                decryptButton.setBackground(new java.awt.Color(102, 102, 255));
                decryptButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                decryptButton.setForeground(new java.awt.Color(0, 0, 0));
                decryptButton.setText("Decrypt");
                decryptButton.setBorder(javax.swing.BorderFactory.createCompoundBorder());
                decryptButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                decryptButtonActionPerformed(evt);
                        }
                });

                clear1.setBackground(new java.awt.Color(255, 102, 102));
                clear1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                clear1.setForeground(new java.awt.Color(0, 0, 0));
                clear1.setText("Clear");
                clear1.setBorder(javax.swing.BorderFactory.createCompoundBorder());
                clear1.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                clear1ActionPerformed(evt);
                        }
                });

                dOutput.setEditable(false);
                dOutput.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                dOutput.setForeground(new java.awt.Color(0, 0, 0));
                dOutput.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                dOutputActionPerformed(evt);
                        }
                });

                label4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                label4.setText("Decrypted Text");

                label5.setFont(new java.awt.Font("Franklin Gothic Book", 1, 12)); // NOI18N
                label5.setForeground(new java.awt.Color(255, 0, 51));
                label5.setText("Tip: be sure to have a 16 character keys.");

                label6.setFont(new java.awt.Font("DialogInput", 2, 10)); // NOI18N
                label6.setText("Created By: Christian Barbosa BSIT-AI41 (September 2-3, 2023");

                label7.setFont(new java.awt.Font("Kozuka Gothic Pr6N B", 1, 18)); // NOI18N
                label7.setForeground(new java.awt.Color(255, 153, 51));
                label7.setText("AES - ENCRYPTION and DECRYPTION with 16 keys");

                javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
                jPanel1.setLayout(jPanel1Layout);
                jPanel1Layout.setHorizontalGroup(
                        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(58, 58, 58)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(25, 25, 25))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                .addComponent(originaText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(keys, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                                        .addComponent(encryptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addGap(18, 18, 18)
                                                                        .addComponent(clear1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addGap(18, 18, 18)
                                                                        .addComponent(decryptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addComponent(eOutput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(dOutput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addContainerGap(44, Short.MAX_VALUE))))
                );
                jPanel1Layout.setVerticalGroup(
                        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(originaText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(13, 13, 13)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(keys, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(30, 30, 30))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(54, 54, 54)
                                                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(encryptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(clear1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(decryptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(eOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(9, 9, 9)
                                                .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(28, 28, 28)
                                                .addComponent(dOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addContainerGap())
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(44, 44, 44))))
                );

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                );

                pack();
        }// </editor-fold>                        
 public static byte[] encrypt(String plainText, SecretKey secretKey) throws Exception {
        Cipher cipher = Cipher.getInstance("AES");
        cipher.init(Cipher.ENCRYPT_MODE, secretKey);
        return cipher.doFinal(plainText.getBytes(StandardCharsets.UTF_8));
    }

 public static String decrypt(byte[] encryptedBytes, SecretKey secretKey) throws Exception {
        Cipher cipher = Cipher.getInstance("AES");
        cipher.init(Cipher.DECRYPT_MODE, secretKey);
        byte[] decryptedBytes = cipher.doFinal(encryptedBytes);
        return new String(decryptedBytes, StandardCharsets.UTF_8);
    }

    public static String bytesToBase64(byte[] bytes) {
        return Base64.getEncoder().encodeToString(bytes);
    }
        private void keysActionPerformed(java.awt.event.ActionEvent evt) {                                     
                 
        }                                    

        private void decryptButtonActionPerformed(java.awt.event.ActionEvent evt) {                                              
		plainText = originaText.getText();
                encryptionKeys = keys.getText();
		

                try {
			  plainText = originaText.getText();
			  encryptionKeys = keys.getText();

                        // Generate a secret key
                        byte[] secretKeyBytes = encryptionKeys.getBytes(StandardCharsets.UTF_8);
                        SecretKey secretKey = new SecretKeySpec(secretKeyBytes, "AES");

                        // Encrypt the message
                        byte[] encryptedBytes = encrypt(plainText, secretKey);

                        // Decrypt the encrypted message
                        String decryptedText = decrypt(encryptedBytes, secretKey);

                        //System.out.println("Original: " + plainText);
                        //System.out.println("Encrypted: " + bytesToBase64(encryptedBytes));
                        //System.out.println("Decrypted: " + decryptedText);
                        dOutput.setText(decryptedText);
                } catch (Exception e) {
                        e.printStackTrace();
                }   
        }                                             

        private void eOutputActionPerformed(java.awt.event.ActionEvent evt) {                                        

        }                                       

        private void encryptButtonActionPerformed(java.awt.event.ActionEvent evt) {                                              
                plainText = originaText.getText();
                encryptionKeys = keys.getText();
		

                try {
			  plainText = originaText.getText();
			  encryptionKeys = keys.getText();

                        // Generate a secret key
                        byte[] secretKeyBytes = encryptionKeys.getBytes(StandardCharsets.UTF_8);
                        SecretKey secretKey = new SecretKeySpec(secretKeyBytes, "AES");

                        // Encrypt the message
                        byte[] encryptedBytes = encrypt(plainText, secretKey);

                        // Decrypt the encrypted message
                        String decryptedText = decrypt(encryptedBytes, secretKey);

                        //System.out.println("Original: " + plainText);
                        //System.out.println("Encrypted: " + bytesToBase64(encryptedBytes));
                        //System.out.println("Decrypted: " + decryptedText);
                        eOutput.setText( bytesToBase64(encryptedBytes));
                } catch (Exception e) {
                        e.printStackTrace();
                }
        }                                             

        private void originaTextActionPerformed(java.awt.event.ActionEvent evt) {                                            
                // TODO add your handling code here:
        }                                           

        private void clear1ActionPerformed(java.awt.event.ActionEvent evt) {                                       
                originaText.setText("");
                keys.setText("");
		eOutput.setText("");
		dOutput.setText("");
		
        }                                      

        private void dOutputActionPerformed(java.awt.event.ActionEvent evt) {                                        
                // TODO add your handling code here:
        }                                       

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(TryingEncryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(TryingEncryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(TryingEncryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(TryingEncryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new TryingEncryption().setVisible(true);
			}
		});
	}

        // Variables declaration - do not modify                     
        private javax.swing.JButton clear1;
        private java.awt.TextField dOutput;
        private javax.swing.JButton decryptButton;
        private java.awt.TextField eOutput;
        private javax.swing.JButton encryptButton;
        private javax.swing.JPanel jPanel1;
        private java.awt.TextField keys;
        private java.awt.Label label1;
        private java.awt.Label label2;
        private java.awt.Label label3;
        private java.awt.Label label4;
        private java.awt.Label label5;
        private java.awt.Label label6;
        private java.awt.Label label7;
        private java.awt.TextField originaText;
        // End of variables declaration                 
}
//This are the changes..

//to do: create a limit to the characters in the 16 keys textfield into 16 characters only..